// Ceres Solver - A fast non-linear least squares minimizer
// Copyright 2015 Google Inc. All rights reserved.
// http://ceres-solver.org/
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice,
//   this list of conditions and the following disclaimer.
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
// * Neither the name of Google Inc. nor the names of its contributors may be
//   used to endorse or promote products derived from this software without
//   specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// Author: sameeragarwal@google.com (Sameer Agarwal)
#include "ceres/ceres.h"
#include "glog/logging.h"
#include "plyfile.h"
using ceres::AutoDiffCostFunction;
using ceres::CostFunction;
using ceres::Problem;
using ceres::Solver;
using ceres::Solve;
// Data generated using the following octave code.
//   randn('seed', 23497);
//   m = 0.3;
//   c = 0.1;
//   x=[0:0.075:5];
//   y = exp(m * x + c);
//   noise = randn(size(x)) * 0.2;
//   y_observed = y + noise;
//   data = [x', y_observed'];

const int kNumObservations = 100;
const double data[] = {
  50.8338385467 , 78.808068929 , -68.1499921349 ,
1.79784255403 , 35.8101419431 , -23.1393754801 ,
93.6153742032 , 21.8404833378 , -44.4321136263 ,
90.895762993 , 33.9969019996 , -51.6298556641 ,
52.808749421 , 59.4160297863 , -55.8802696645 ,
83.2695911048 , 60.9676658961 , -67.0683076323 ,
67.0364960659 , 80.6751299954 , -74.7955853523 ,
37.0412932083 , 57.6087693539 , -49.4196106387 ,
67.091555963 , 33.4627487341 , -43.3390178104 ,
13.4711723928 , 49.5890311056 , -36.2164115347 ,
47.9055401358 , 8.85638489647 , -20.5394366429 ,
24.0417944912 , 18.1092429017 , -18.7534267649 ,
41.0933739776 , 53.5626516689 , -48.0728924385 ,
30.1348853845 , 37.9234084475 , -33.9939007598 ,
96.3813368266 , 96.5956472281 , -95.1908770943 ,
22.9278023665 , 15.9307393168 , -16.9297603334 ,
13.9102555023 , 44.0881848996 , -32.6955417672 ,
66.6273940348 , 4.02499816534 , -23.5591301218 ,
15.0343752644 , 50.4455364336 , -37.3084827105 ,
50.8732724701 , 65.9001127764 , -59.5578326743 ,
24.3301667624 , 36.6123260309 , -31.1849396081 ,
15.3824828421 , 5.00596264223 , -7.13146937552 ,
84.211168186 , 98.4718758859 , -92.3849733193 ,
42.9435322946 , 31.5911391484 , -34.0419368638 ,
11.6331108154 , 51.8406090767 , -37.1047763229 ,
11.6414852407 , 80.8774141927 , -56.4654378754 ,
32.4587370022 , 84.5583364931 , -65.8584699961 ,
88.6919490323 , 26.8789253637 , -46.1499332532 ,
93.9447855158 , 47.5992548463 , -61.7144317361 ,
91.0348106218 , 36.5692579883 , -53.3911088661 ,
48.5845849941 , 78.1532376464 , -66.9636867623 ,
69.2395004251 , 9.37109512012 , -27.9938968885 ,
55.9559161774 , 48.7624552684 , -49.8269422381 ,
54.440844791 , 29.8633217527 , -36.7224960988 ,
74.2516055083 , 74.6546066594 , -73.186939609 ,
52.5480247845 , 84.672960373 , -72.6313151768 ,
92.5356639979 , 4.35531217195 , -32.4154294472 ,
98.3334033351 , 13.7826310261 , -40.6328884624 ,
25.4560429993 , 28.2828371435 , -26.0072390955 ,
4.58669067451 , 51.2901200714 , -34.3889769391 ,
31.592452169 , 84.1302881118 , -65.2843427975 ,
87.0990514475 , 84.7552971577 , -84.2032152543 ,
59.9185077045 , 75.8761507479 , -69.2236030667 ,
99.4318663651 , 21.5273961693 , -46.1622195679 ,
33.6822975634 , 23.3258581057 , -25.4446712583 ,
54.7364286223 , 35.5451523046 , -40.6089110772 ,
52.9502339549 , 3.08478530915 , -18.3732681911 ,
42.2140264461 , 21.669319117 , -27.1842215601 ,
80.3824678289 , 78.5166046997 , -77.8052257428 ,
4.12891245718 , 86.1040157293 , -57.4456479719 ,
62.309342232 , 40.1831763869 , -46.2252316686 ,
24.0747855898 , 71.8411848409 , -54.5857184239 ,
12.3272111818 , 44.9057644109 , -32.7129133345 ,
33.9109310073 , 71.0842606226 , -57.3598174175 ,
92.1900288181 , 62.6608094046 , -71.1705492091 ,
48.3994274273 , 73.0296561108 , -63.4862465496 ,
88.1881017786 , 29.5250810592 , -47.7460879657 ,
35.2547909714 , 67.0395381471 , -55.1112890885 ,
57.8086538077 , 98.2951753814 , -83.4663348568 ,
11.5276138974 , 4.69905505783 , -5.64190800435 ,
63.8497592295 , 97.395735031 , -84.8804097638 ,
74.1079165807 , 33.3493224022 , -45.6021871284 ,
1.07720149908 , 76.5560926859 , -50.063128957 ,
98.24564358 , 99.2001254917 , -97.5486315212 ,
92.1263250435 , 61.6047442711 , -70.4452711952 ,
68.2774902953 , 96.5564741709 , -85.7968128791 ,
36.5858634536 , 11.1856121585 , -18.3190292569 ,
11.9459577018 , 33.2276478718 , -24.8004178151 ,
8.06439635444 , 11.0427538694 , -8.71663469775 ,
11.4876943571 , 95.9601027825 , -66.469299974 ,
94.5131890652 , 50.3981088832 , -63.7698022772 ,
36.8352806352 , 60.9334962022 , -51.5674243466 ,
77.0385117575 , 28.6819960231 , -43.4675012679 ,
53.402813121 , 64.5234808795 , -59.4832582933 ,
0.661579485019 , 44.8001743156 , -28.7539760387 ,
12.4746550557 , 94.199318312 , -65.6244305599 ,
94.4410310827 , 59.2651248274 , -69.6570935792 ,
44.7320440841 , 59.5396690787 , -53.2704607472 ,
60.4543190743 , 90.3853748976 , -79.0750229565 ,
19.3733439296 , 66.3353728925 , -49.3480299048 ,
57.8537464256 , 89.1494736286 , -77.3842312276 ,
96.2069224022 , 54.7373028973 , -67.2271760656 ,
71.6732355698 , 87.2927467064 , -80.7529096609 ,
57.5623194731 , 65.0427129392 , -61.2159151172 ,
58.8203078171 , 85.2586263463 , -75.1125201699 ,
15.2914624541 , 76.103528706 , -54.499506622 ,
93.2750236835 , 21.8876853283 , -44.3501314467 ,
79.0944058406 , 20.9017191797 , -38.9659480667 ,
98.3567512997 , 41.1300592005 , -58.8722899003 ,
19.5121941728 , 94.7619297697 , -68.3453512374 ,
21.9045363927 , 48.1434005309 , -38.0637791515 ,
1.074477339 , 95.5310481338 , -62.7121912022 ,
3.54600402195 , 4.05823837602 , -2.554160258 ,
37.3885267648 , 6.77310773187 , -15.6449140762 ,
48.9863775557 , 57.1254000951 , -53.0790592486 ,
42.0138662588 , 34.5933737123 , -35.7335378945 ,
27.7854106149 , 87.7468730245 , -66.4263855546 ,
39.0882253709 , 45.9390841726 , -42.3221312387 ,
45.2528010998 , 19.9601664315 , -27.0577113209 ,
80.4733866427 , 4.93829744452 , -28.7833271772,
};

const double data1[] = {
  3.17092707496 , 52.9382209116 , -33.6824562994 ,
31.4294260557 , 21.6090691155 , -22.2158547622 ,
59.180894634 , 6.52977460654 , -21.4134812824 ,
9.29079329124 , 98.4795467736 , -66.0832956128 ,
71.9980580892 , 60.2587171331 , -61.5051641185 ,
56.739394357 , 44.2985342623 , -45.7788209605 ,
23.3297802798 , 86.1033323184 , -62.5121483055 ,
58.2915714667 , 9.26123768056 , -22.9380156093 ,
68.0680826198 , 8.18573019533 , -25.4798476701 ,
20.3515231134 , 9.49284930863 , -10.4457405769 ,
57.887984562 , 19.8154495362 , -29.8396278781 ,
5.21299125314 , 56.9358079335 , -37.0282023734 ,
57.6250548766 , 87.4547638163 , -74.8448608364 ,
49.6050370958 , 72.0894550011 , -61.927982366 ,
67.2025894152 , 98.3453367237 , -85.2977542875 ,
28.6685099179 , 43.6773960786 , -36.0077673584 ,
61.1849141503 , 54.5572694817 , -54.0998177046 ,
61.3873018702 , 69.1190020053 , -63.8751019602 ,
85.1654053074 , 76.0925929034 , -76.450197038 ,
60.2796437243 , 97.9807274101 , -82.7470328482 ,
9.97174601784 , 18.6634072557 , -13.0995201764 ,
41.0100857934 , 68.899427713 , -56.9363137398 ,
14.2128920451 , 4.11293783811 , -4.81292257376 ,
15.8536583761 , 96.6063342787 , -67.0221089779 ,
40.3239363993 , 40.7695815396 , -37.9543664928 ,
32.8115536935 , 83.1708812355 , -63.7177720548 ,
51.5112259368 , 48.355531752 , -46.7407631469 ,
32.0634206691 , 11.1928223955 , -15.48302182 ,
50.2241416166 , 87.9769295261 , -72.7260002229 ,
84.9011313982 , 64.5335102834 , -68.656050655 ,
54.8453441551 , 81.6054535314 , -70.0187504059 ,
23.1027295273 , 51.7817924097 , -39.5554381156 ,
23.4309914149 , 79.3875070515 , -58.068668506 ,
38.1039644613 , 16.3410052304 , -20.9286583073 ,
58.7140207946 , 11.1150183359 , -24.3146858221 ,
27.2697579213 , 21.2038553012 , -20.5591561746 ,
96.469382179 , 90.5721920531 , -89.8712554284 ,
60.0071625901 , 34.7472922064 , -40.5005823343 ,
48.6195916065 , 84.1232226738 , -69.622012318 ,
7.57427058339 , 81.6309586298 , -54.278729281 ,
46.431002473 , 19.2284241856 , -25.6292836147 ,
0.5995290408 , 36.1697722519 , -21.6463578482 ,
54.3158258613 , 66.5458160689 , -59.8024859997 ,
42.6611228647 , 69.3472005302 , -57.7851746417 ,
85.1603105937 , 86.8671475302 , -83.631535218 ,
12.1495503285 , 96.0890055171 , -65.4425204542 ,
73.0706529394 , 65.9539752984 , -65.6595345121 ,
12.1718869536 , 48.1771968555 , -33.5087602216 ,
42.7545916136 , 4.56776667334 , -14.6300416534 ,
37.4173951773 , 16.8252815938 , -21.0226527883 ,
84.689089504 , 41.8665476472 , -53.4740615994 ,
16.0967325127 , 9.03426005909 , -8.72175087696 ,
55.5995309644 , 53.7356110173 , -51.6902509996 ,
52.8349486143 , 19.1555831226 , -27.7153716198 ,
42.5090968855 , 60.7619237737 , -52.0109814776 ,
83.7507581693 , 10.237310594 , -32.0751264524 ,
78.7766378653 , 49.0082457332 , -56.2643764439 ,
31.5804540225 , 71.2236338256 , -55.3425738912 ,
33.8051317885 , 48.4173576345 , -40.8799490192 ,
26.6363811523 , 91.8032098337 , -67.4142669399 ,
67.4412308937 , 93.5476490624 , -82.1788430061 ,
56.7825566956 , 45.4819263161 , -46.5821364426 ,
39.1507018182 , 69.9323879666 , -57.0051592505 ,
93.6476204671 , 1.36519638895 , -29.4593377483 ,
53.7790719115 , 36.0904984106 , -39.3200229109 ,
80.3325594089 , 60.9929488171 , -64.7728190144 ,
94.8087570028 , 32.8178266355 , -50.8148034246 ,
60.4941407352 , 99.559324346 , -83.8709298091 ,
0.0202878025966 , 25.9818016294 , -14.6612970205 ,
26.4912269858 , 11.2215527807 , -13.6447775157 ,
72.6028860698 , 40.2989608782 , -48.4002692754 ,
6.27591154659 , 49.627297795 , -32.5101690455 ,
51.4026475899 , 89.541028589 , -74.161568256 ,
9.02785068025 , 21.8618705439 , -14.917197256 ,
73.9133477006 , 14.1612292141 , -31.4119353763 ,
48.8546025392 , 16.7784035731 , -24.8038032285 ,
80.8247962723 , 16.222592646 , -35.0899938548 ,
1.45180280036 , 76.3161193411 , -48.6946804942 ,
31.881271165 , 51.6412363755 , -42.3879146386 ,
13.271940834 , 27.3193472674 , -19.9702117896 ,
62.8679163656 , 58.0286229421 , -56.9750540833 ,
74.8454419729 , 44.2695889344 , -51.7948732806 ,
21.8609288009 , 85.5863778844 , -61.6778948566 ,
80.9939631298 , 93.2262800241 , -86.4821743927 ,
87.5360336323 , 93.374857544 , -88.7619162401 ,
71.5806660922 , 72.6651567187 , -69.6369931765 ,
20.0597510529 , 11.3145602896 , -11.5629572107 ,
99.9455939557 , 84.5214433611 , -86.9961602259 ,
65.5307191656 , 70.652589372 , -66.2786326365 ,
77.6499681408 , 14.4731310992 , -32.865410113 ,
61.9771899181 , 55.6527285858 , -55.0942156966 ,
62.651845608 , 16.4896784534 , -29.2104008383 ,
77.618811854 , 99.7750597824 , -89.7229771396 ,
53.0902881957 , 47.2683751879 , -46.5423461905 ,
35.2232792492 , 36.1265137633 , -33.1587689253 ,
97.4923768717 , 58.9238212583 , -69.1133397961 ,
98.9011683398 , 41.0244023624 , -57.6499910215 ,
22.9790988244 , 46.9789473401 , -36.3123311682 ,
36.761187646 , 79.530346475 , -62.607293532 ,
52.5878980401 , 66.6381016139 , -59.288033756 ,
};

const double data2[] = {
  78.9108732308 , 53.3555809861 , 105.649912848 ,
93.3160459063 , 81.0351652762 , 147.451979548 ,
3.75221177811 , 61.888114699 , 78.7362492628 ,
45.2333487412 , 10.85507616 , 35.6855195706 ,
48.3924340582 , 25.5250569211 , 55.6025381805 ,
8.76669298942 , 67.4925367927 , 88.2490174856 ,
89.7605810468 , 64.5836807389 , 125.109891447 ,
60.0140085607 , 40.5542632683 , 80.1998333657 ,
13.8079865709 , 41.6804076106 , 58.5045027987 ,
45.1847467579 , 75.290352972 , 116.205314594 ,
75.3958634207 , 72.8664285411 , 128.280967387 ,
95.0998730897 , 49.5495952378 , 108.986930592 ,
34.3043687647 , 92.5249163222 , 132.308329785 ,
48.4031329004 , 5.59708736482 , 30.6979256562 ,
1.35190689191 , 7.84776245292 , 9.9856565121 ,
5.66888793352 , 24.1643676162 , 32.5399034871 ,
5.18211037546 , 18.1204908208 , 24.7416687138 ,
79.2122305679 , 61.0433029918 , 115.410244024 ,
69.0638129074 , 88.4272446931 , 144.56596232 ,
45.0441252739 , 70.3489006498 , 109.958188449 ,
13.2166812129 , 31.870080192 , 45.9459408465 ,
79.4634912689 , 11.2807430688 , 53.3326744704 ,
70.1010009129 , 51.1383021544 , 98.4733781495 ,
57.86476957 , 3.11911397641 , 32.3312772555 ,
65.62510369 , 11.1212207712 , 46.214077809 ,
81.0347463306 , 36.7318921687 , 85.9322383761 ,
39.1593393962 , 80.9271478373 , 120.238604495 ,
29.1717332834 , 5.79931023094 , 21.3350044304 ,
65.8358325017 , 5.23232986053 , 38.9583285765 ,
38.9998371575 , 95.22259863 , 138.028166866 ,
68.0040771455 , 4.99782383033 , 39.7493183606 ,
34.7985730491 , 13.2068210779 , 33.4078128719 ,
56.3136583988 , 65.103103239 , 109.035708248 ,
7.40670419564 , 17.8552138818 , 25.5223694501 ,
86.1752695704 , 18.2974977884 , 65.4595070207 ,
65.4957936816 , 49.8987228664 , 94.6213004237 ,
0.0340857429814 , 1.54628715329 , 1.4499018131 ,
75.9840334377 , 31.4916394443 , 76.8565660243 ,
79.9168105927 , 95.9524851378 , 159.399011719 ,
10.2509186864 , 74.9181549084 , 98.2731529787 ,
82.717644602 , 83.5274465845 , 145.268130532 ,
60.7517530735 , 42.1507045872 , 82.5642572708 ,
64.2595132323 , 28.025379523 , 66.6614810199 ,
35.6001785883 , 62.507141619 , 95.4340163179 ,
57.3679591496 , 34.7774797482 , 71.65582926 ,
58.0147917965 , 82.06859473 , 131.093139311 ,
6.57336131003 , 98.8120222721 , 126.301708495 ,
44.8357849763 , 96.4738584029 , 142.510215492 ,
73.3367690104 , 70.7580808733 , 124.615985597 ,
20.1153083974 , 95.4769828901 , 128.903882811 ,
30.3015954893 , 90.0491491788 , 127.212234218 ,
84.9939869779 , 78.4585785523 , 140.070216679 ,
0.443717542883 , 74.8780563571 , 93.3194292178 ,
75.8729836335 , 61.8669925858 , 114.770232549 ,
96.0407320043 , 82.6905802459 , 150.883591309 ,
37.38096575 , 58.3576122303 , 91.1374981629 ,
42.1946506568 , 46.5421260948 , 78.7749829469 ,
84.3916034909 , 15.9152297068 , 61.5898388789 ,
17.4921426683 , 65.6033830704 , 90.2503001722 ,
83.0945035056 , 52.2134284528 , 106.314037319 ,
32.5036980651 , 68.4586701309 , 101.325186696 ,
40.1384481352 , 26.6316663063 , 52.8588069505 ,
19.936573427 , 17.7351251553 , 31.6371931577 ,
57.9938901536 , 46.9759600492 , 87.2168951383 ,
78.531984569 , 45.7388234828 , 95.939521638 ,
6.2416504146 , 58.0993479742 , 75.2450101751 ,
81.0081983406 , 15.0045954174 , 58.7598434421 ,
19.9409398485 , 14.6792623102 , 27.8195478121 ,
55.9988206268 , 93.8359944717 , 144.794403403 ,
81.5802947558 , 19.4704428171 , 64.6282008992 ,
6.01303704956 , 26.730075219 , 35.9191125485 ,
67.3374337009 , 1.75918876884 , 35.3677028115 ,
49.870884675 , 16.0306122594 , 44.4737076617 ,
73.1382933317 , 29.225203438 , 72.6006509634 ,
1.67018534058 , 98.4298227413 , 123.372371097 ,
48.0315286449 , 5.86683503729 , 30.8493081191 ,
60.1986090274 , 19.1540944933 , 53.5419226303 ,
31.8349595252 , 74.1945628094 , 108.160683274 ,
6.101019893 , 33.1994008776 , 44.0497610436 ,
2.47918380983 , 17.8675540545 , 23.074034473 ,
66.7591202663 , 43.6726481318 , 87.4703702979 ,
24.2496816713 , 84.8964587669 , 117.745414294 ,
81.0415431021 , 66.7585933196 , 123.469013201 ,
52.5703716434 , 85.997758167 , 133.28238353 ,
14.1496365391 , 88.0652872571 , 116.656427341 ,
53.9432474392 , 3.66663608591 , 31.054918827 ,
95.7405416803 , 96.7764798562 , 168.34087066 ,
43.0421631185 , 28.177965462 , 56.2435383868 ,
57.566062719 , 90.3323376183 , 141.198453382 ,
3.60609780322 , 27.6448749128 , 35.8591425426 ,
18.4848195291 , 86.4619823589 , 116.819887713 ,
7.21232001751 , 4.63577162817 , 8.90087454397 ,
42.3429536847 , 6.34994819752 , 28.6089120893 ,
87.3106194675 , 4.21815773606 , 48.4280069038 ,
84.1247860789 , 60.806206536 , 117.570151209 ,
55.6919801771 , 26.2331174685 , 60.1373869241 ,
28.3543426546 , 86.1189607143 , 121.32587222 ,
81.4328932289 , 58.1404053979 , 112.891953362 ,
86.3808634256 , 32.0147220834 , 82.7088343171 ,
75.7010898012 , 41.2330756844 , 88.8918895062 ,
};

struct PlanarResidual {
  PlanarResidual(double x, double y, double z)
      : x_(x), y_(y), z_(z) {}
  template <typename T> bool operator()(const T* const a,
                                        const T* const b,
                                        const T* const c,
                                        const T* const d,
                                        T* residual) const {
    residual[0] = d[0] - (x_*a[0] + y_*b[0] + z_*c[0]);
    return true;
  }
 private:
  const double x_;
  const double y_;
  const double z_;
};

struct PerpResidual {
  template <typename T>
  bool operator()(const T* const x1,
                  const T* const x2,
                  const T* const x3,
                  const T* const x4,
                  const T* const x5,
                  const T* const x6,
                  T* residual) const {
    residual[0] = 100.0*(x1[0]*x4[0] + x2[0]*x5[0] + x3[0]*x6[0]);
    return true;
  }
};

int main(int argc, char** argv) {
  google::InitGoogleLogging(argv[0]);
  double a = 1.0;
  double b = 1.0;
  double c = 1.0;
  double d = 1.0;
  double e = 1.0;
  double k = 1.0;
  double l = 1.0;
  double m = 1.0;
  double n = 1.0;
  Problem problem;
  plyfile f_wall1("plane1.ply");
  plyfile f_wall2("plane3.ply");
  plyfile f_roof("plane2.ply");

  std::cout << "Read input\n";
  for (int i = 0; i < f_wall1.NumPoints(); ++i) {
    problem.AddResidualBlock(
        new AutoDiffCostFunction<PlanarResidual, 1, 1, 1, 1, 1>(
            new PlanarResidual(f_wall1.alldata[i].first.x,
                               f_wall1.alldata[i].first.y, 
                               f_wall1.alldata[i].first.z)),
        NULL,
        &a, &b, &c, &d);
  }
  for (int i = 0; i < f_wall2.NumPoints(); ++i) {
    problem.AddResidualBlock(
        new AutoDiffCostFunction<PlanarResidual, 1, 1, 1, 1, 1>(
            new PlanarResidual(f_wall2.alldata[i].first.x,
                               f_wall2.alldata[i].first.y, 
                               f_wall2.alldata[i].first.z)),
        NULL,
        &a, &b, &c, &e);
  }
  for (int i = 0; i < f_roof.NumPoints(); ++i) {
    problem.AddResidualBlock(
        new AutoDiffCostFunction<PlanarResidual, 1, 1, 1, 1, 1>(            
          new PlanarResidual(f_roof.alldata[i].first.x,
                             f_roof.alldata[i].first.y, 
                             f_roof.alldata[i].first.z)),
        NULL,
        &k, &l, &m, &n);
  }
  problem.AddResidualBlock(new AutoDiffCostFunction<PerpResidual, 1, 1, 1, 1, 1, 1, 1>(new PerpResidual()),
    NULL,
    &a, &b, &c, &k, &l, &m);

  problem.SetParameterBlockConstant(&d);
  problem.SetParameterBlockConstant(&n);
  Solver::Options options;
  options.max_num_iterations = 1000;
  options.linear_solver_type = ceres::DENSE_QR;
  options.use_nonmonotonic_steps = true;
  options.minimizer_progress_to_stdout = true;
  Solver::Summary summary;
  Solve(options, &problem, &summary);
  std::cout << summary.FullReport() << "\n";
  std::cout << "Final 1 " << a << "\t" << b << "\t" << c << "\t" << d << "\t" << e << "\n";
  std::cout << "Final 2 " << k << "\t" << l << "\t" << m << "\t" << n << "\n";
  std::cout << "Error: " <<(a*k + b*l + c*m)/sqrt((a*a + b*b + c*c)*(k*k + l*l + m*m)) << "\n";
  return 0;
}
